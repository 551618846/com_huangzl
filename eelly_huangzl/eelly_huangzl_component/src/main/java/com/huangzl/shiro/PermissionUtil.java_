/** 
* @组件名：eelly_springmvc_component
* @包名：com.eelly.mvc.common
* @文件名：PermissionUtil.java
* @创建时间： 2014年11月14日 下午2:08:10
* @版权信息：Copyright © 2014 eelly Co.Ltd,衣联网版权所有。
*/

package com.huangzl.shiro;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;
import org.springframework.core.io.support.PropertiesLoaderUtils;

import com.eelly.core.util.SpringContextUtil;
import com.eelly.mvc.shiro.dao.UtilMapper;

/**
 * @类名：PermissionUtil
 * @描述: 
 * @创建人：<a href=mailto: huangzhenliang@eelly.net>huangzhenliang</a>
 * @修改人：
 * @修改时间：2014年11月14日 下午2:08:10
 * @修改说明：<br/>
 * @版本信息：V1.0.0<br/>
 */
public class PermissionUtil {
    
    private static UtilMapper utilMapper;
    
    /**
     * 2-商城应用类
     */
    public static String CONTROL_TYPE_MALL = "2";
    
    private static String permissionControlType = "";
    
    static{
        Resource resource = new ClassPathResource("/conf/common.properties");
        try {
            Properties props = PropertiesLoaderUtils.loadProperties(resource);
            permissionControlType = props.getProperty("of_app");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private static UtilMapper getUserMapper(){
        if(utilMapper == null){
            utilMapper = SpringContextUtil.getBean(UtilMapper.class);
        }
        return utilMapper;
    }
    
    
    private static Map<String, Set<String>> columnPermissions = null;//"列权限"下的字段
    
    private static List<String> needPermitList = null;//需要权限控制的方法(权限).取特权权限+黑名单角色下的权限
    
    private static List<String> specialPermissionList = null;//特权权限列表
    

    /**
     * @方法名：getPermissionControlType
     * @描述：项目的权限控制类型,配置在common.properties的permissionControlType:admin后台系统,有权限才能使用;其他-商城应用,特权+受限+默认:默认不控制,特权需要授权,受限需要禁权.
     * @创建人：<a href=mailto: huangzhenliang@eelly.net>huangzhenliang</a>
     * @修改人：
     * @修改时间：2014年11月18日 上午11:21:46
     * @return 
     * @返回值：String 
     * @异常说明：
     */
    public static String getPermissionControlType(){
        return permissionControlType;
    }
    
    /**
     * @方法名：getFieldList
     * @描述：工具方法,用于获取某个"列权限"下的字段
     * @创建人：<a href=mailto: huangzhenliang@eelly.net>huangzhenliang</a>
     * @修改人：
     * @修改时间：2014年11月14日 下午4:57:26
     * @param function
     * @return 
     * @返回值：Set<String> 
     * @异常说明：
     */
    public static Set<String> getFieldListOfColumnPermission(String columnPermission){
        if(columnPermissions == null){
            initColumnPermissions();
        }
        Set<String> set = columnPermissions.get(columnPermission);
        if(set != null){
            return set;
        }
        return new HashSet<String>();
    }
    
    public static void clearColumnPermissions(){
        columnPermissions = null;
    }
    
    private static void initColumnPermissions(){//模拟加载数据库数据
        columnPermissions = new ConcurrentHashMap<String, Set<String>>();
        List<HashMap<String, String>> list = getUserMapper().getPermissionColList();
        for(HashMap<String, String> row : list){
            String key = row.get("permission_value");
            String column_name = row.get("column_name");
            Set<String> cols = columnPermissions.get(key);
            if(cols == null){
                Set<String> set_t = new HashSet<String>();
                columnPermissions.put(key, set_t);
                cols = columnPermissions.get(key);;
            }
            cols.add(column_name);
        }
        
        //for test
        /*Set<String> set = new HashSet<String>();
        set.add("rec_id");
        set.add("username");
        set.add("password");
        columnPermissions.put("findUserByQueryVo-all", set);
        
        Set<String> set2 = new HashSet<String>();
        set2.add("username");
        columnPermissions.put("findUserByQueryVo-name", set2);*/
        
        
    }
    
    
    /**
     * @方法名：getSpecialPermissionList
     * @描述：特权权限列表.商城类权限AOP规则:目标方法是否特权:是->有权限?通过:拒绝; 否->是否受限权限?拒绝:通过.[特权和受限权有交集,特权优先] 
     * @创建人：<a href=mailto: huangzhenliang@eelly.net>huangzhenliang</a>
     * @修改人：
     * @修改时间：2014年11月18日 上午11:07:41
     * @return 
     * @返回值：List<String> 
     * @异常说明：
     */
    public static List<String> getSpecialPermissionList(){
        if(specialPermissionList == null){
            initSpecialPermissionList();
        }
        return specialPermissionList;
    }
    
    public static void clearSpecialPermissionList(){
        specialPermissionList = null;
    }
    
    private static void initSpecialPermissionList(){//特权权限
        specialPermissionList = new ArrayList<String>();
        List<HashMap<String, String>> list = getUserMapper().getSpecialPermissionList();
        for(HashMap<String, String> row : list){
            String p = row.get("permission_value");
            specialPermissionList.add(p);
        }
        
        //for test
//        specialPermissionList.add("com.eelly.mvc.controller.DroolsTestController.colPermit_");
    }
    
    
    
    
    /**
     * @方法名：getNeedPermitList
     * @描述：需要权限控制的方法(权限):取特权权限+黑名单角色下的权限;AOP拦截可优化一下性能 
     * @创建人：<a href=mailto: huangzhenliang@eelly.net>huangzhenliang</a>
     * @修改人：
     * @修改时间：2014年11月18日 上午11:06:47
     * @return 
     * @返回值：List<String> 
     * @异常说明：
     */
    public static List<String> getNeedPermitList(){
        if(needPermitList == null){
            initNeedPermitList();
        }
        return needPermitList;
    }
    
    public static void clearNeedPermitList(){
        needPermitList = null;
    }
    
    private static void initNeedPermitList(){////需要权限控制的方法(权限):取特权权限+黑名单角色下的权限
        needPermitList = new ArrayList<String>();
        List<HashMap<String, String>> list = getUserMapper().getNeedPermitList();
        for(HashMap<String, String> row : list){
            String p = row.get("permission_value");
            needPermitList.add(p);
        }
        
        //for test
//        needPermitList.add("com.eelly.mvc.controller.DroolsTestController.colPermit");
    }
    
    
    

}

